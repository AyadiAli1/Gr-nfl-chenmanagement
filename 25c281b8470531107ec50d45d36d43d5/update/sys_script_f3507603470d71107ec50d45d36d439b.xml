<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1112736_gr_nfl_c_gruenflaechenarbeiten</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>test</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// Add your code here
	var arbeiten = new GlideRecord('x_1112736_gr_nfl_c_gruenflaechenarbeiten');
	
	var kollidiert_mit_arbeit = false; // -> für Email später
	var kollidiert_mit_veranst = false; // -> für Email später
	
	// Vergleich mit bestehenden GF-Arbeiten
	arbeiten.addQuery('ort', current.ort);
	arbeiten.addQuery('anfangsdatum', '<=', current.enddatum);
	arbeiten.addQuery('enddatum', '>=', current.anfangsdatum);
	arbeiten.query();
	
	
	if (arbeiten.hasNext()) {
        gs.addErrorMessage('Es gibt bereits eine Grünflächenarbeit, die mit diesem Zeitraum kollidiert.');
        current.setAbortAction(true); // Verhindern Sie die Speicherung des neuen Datensatzes
    }
	
	// Vergleich bestehenden Veranstaltungen
	var gr = new GlideRecord('x_1112736_gr_nfl_c_m2m_x_1112736_g_x_1112736_g'); // Tabelle anliegend(GF,Gebäude)
	gr.addJoinQuery('x_1112736_gr_nfl_c_veranstaltung', 'x_1112736_gr_nfl_c_gebaeude', 'gebaeude'); // Inner Join mit Tabelle Veranstaltung mit
	gr.addQuery('x_1112736_gr_nfl_c_gruenflaechen', current.ort);
	gr.query();
	
	//var i=0;
	
	while(gr.next()) {
		var veranstaltungsName = gr.getLink(); 
		gs.info(veranstaltungsName);
		/*gs.addInfoMessage(gr.getValue('x_1112736_gr_nfl_c_gebaeude').name+' , '+gr.getValue('x_1112736_gr_nfl_c_veranstaltung').name);
		//gs.addInfoMessage('Es gibt '+gr.getRowCount()+' Veranstaltungen, die nebenan stattfinden.');*/
	}
	
	
	
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>claudia</sys_created_by>
        <sys_created_on>2023-09-07 22:02:28</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f3507603470d71107ec50d45d36d439b</sys_id>
        <sys_mod_count>30</sys_mod_count>
        <sys_name>test</sys_name>
        <sys_overrides/>
        <sys_package display_value="Grünflächenmanagement" source="x_1112736_gr_nfl_c">25c281b8470531107ec50d45d36d43d5</sys_package>
        <sys_policy/>
        <sys_scope display_value="Grünflächenmanagement">25c281b8470531107ec50d45d36d43d5</sys_scope>
        <sys_update_name>sys_script_f3507603470d71107ec50d45d36d439b</sys_update_name>
        <sys_updated_by>claudia</sys_updated_by>
        <sys_updated_on>2023-09-11 16:31:36</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f3507603470d71107ec50d45d36d439b"/>
</record_update>
